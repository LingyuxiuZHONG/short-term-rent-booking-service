<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD MyBatis Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.bookingservice.mapper.BookingMapper">
    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO booking (
            listing_id, guest_id, host_id,
            start_date, end_date, guest_count,
            total_amount, discount_amount
        )
        VALUES (
                   #{listingId}, #{guestId}, #{hostId},
                   #{startDate}, #{endDate}, #{guestCount},
                   #{totalAmount}, #{discountAmount}
               )
    </insert>

    <select id="getBookingById" resultType="com.example.bookingservice.model.Booking">
        SELECT * FROM booking WHERE id = #{id}
    </select>



    <select id="countConflictingBookings" resultType="int">
        SELECT COUNT(*)
        FROM booking
        WHERE listing_id = #{listingId}
        AND status IN (0, 1, 3) <!-- 0待支付, 1已支付, 3已完成 -->
        AND (
            (start_date &lt; #{endDate} AND end_date &gt; #{startDate})
        )
    </select>


    <update id="updateStatusToCancelled">
        UPDATE booking
        SET status = #{status},
            cancelled_at = #{cancelledAt}
        WHERE id = #{id}
    </update>

    <select id="getBookingsByGuestId" resultType="Booking">
        SELECT *
        FROM booking
        WHERE guest_id = #{guestId}
        ORDER BY created_at DESC
    </select>

    <select id="getBookingsByHostId" resultType="Booking">
        SELECT *
        FROM booking
        WHERE host_id = #{hostId}
        ORDER BY created_at DESC
    </select>

    <update id="updatePaymentInfo">
        UPDATE booking
        <set>
            <if test="paidAmount != null">paid_amount = #{paidAmount},</if>
            <if test="status != null">status = #{status},</if>
            <if test="paymentTransactionId != null">payment_transaction_id = #{paymentTransactionId},</if>
            <if test="refundTransactionId != null">refund_transaction_id = #{refundTransactionId},</if>
        </set>
        WHERE id = #{id}
    </update>

    <select id="dateIsOccupied">
        SELECT DISTINCT listing_id
        FROM booking
        WHERE
        (start_date >= #{to} AND end_date &lt;= #{from})
        AND status IN (0,1,3)
    </select>




</mapper>
